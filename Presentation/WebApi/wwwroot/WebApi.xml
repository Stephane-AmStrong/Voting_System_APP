<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApi</name>
    </assembly>
    <members>
        <member name="M:WebApi.Controllers.v1.AccountController.Authenticate(Application.Features.Account.Commands.Authenticate.AuthenticationCommand)">
            <summary>
            Authenticate a User.
            </summary>
            <param name="command"></param>
            <returns>An authenticated user token</returns>
            <response code="200">The authenticated User</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.Register(Application.Features.Account.Commands.RegisterVoter.RegisterVoterCommand)">
            <summary>
            Creates a User Account.
            </summary>
            <param name="command"></param>
            <returns>A newly created User Account</returns>
            <response code="200">Returns the newly User Account</response>
            <response code="400">If the command is null</response>           
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.ConfirmEmailAsync(Application.Features.Account.Queries.ConfirmEmail.ConfirmEmailQuery)">
            <summary>
            Confirm user's email.
            </summary>
            <param name="command"></param>
            <returns>Confirm a newly created User Account's email</returns>
            <response code="200">Returns confirmation success message</response>
            <response code="400">If the command is not valide</response>           
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.ForgotPasswordAsync(Application.Features.Account.Commands.ForgotPassword.ForgotPasswordCommand)">
            <summary>
            Send a Reset Token for a forgotten password.
            </summary>
            <param name="command"></param>
            <returns>Generate a Reset Token for a forgotten password</returns>
            <response code="200">Returns the generated password reset token</response>
            <response code="400">If the command is not valide</response>           
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.ResetPasswordAsync(Application.Features.Account.Commands.ResetPassword.ResetPasswordCommand)">
            <summary>
            Reset user's Password.
            </summary>
            <param name="command"></param>
            <returns>Assigns a new password to the user's account</returns>
            <response code="200">Returns New password assignment success message</response>
            <response code="400">If the command is not valide</response>           
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.Refresh(Application.Features.Account.Commands.RefreshAccessToken.RefreshTokensCommand)">
            <summary>
            Refreshes a Token.
            </summary>
            <param name="command"></param>
            <returns>A newly created Token</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.Revoke">
            <summary>
            Revokes a Token.
            </summary>
            <returns>A newly created Token</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.CandidatesController.Get(Application.Features.Candidates.Queries.GetPagedList.GetCandidatesQuery)">
            <summary>
            return candidates that matche the criteria
            </summary>
            <param name="candidatesQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.CandidatesController.Get(System.Guid)">
            <summary>
            Retreives a specific Candidate.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.CandidatesController.Post(Application.Features.Candidates.Commands.Create.CreateCandidateCommand)">
            <summary>
            Creates a Candidate.
            </summary>
            <param name="command"></param>
            <returns>A newly created Candidate</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.CandidatesController.Put(System.Guid,Application.Features.Candidates.Commands.Update.UpdateCandidateCommand)">
            <summary>
            Update a specific Candidate.
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.CandidatesController.Delete(System.Guid)">
            <summary>
            Deletes a specific Candidate.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.CategoriesController.Get(Application.Features.Categories.Queries.GetPagedList.GetCategoriesQuery)">
            <summary>
            return categories that matche the criteria
            </summary>
            <param name="categoriesQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.CategoriesController.Get(System.Guid)">
            <summary>
            Retreives a specific Category.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.CategoriesController.Post(Application.Features.Categories.Commands.Create.CreateCategoryCommand)">
            <summary>
            Creates a Category.
            </summary>
            <param name="command"></param>
            <returns>A newly created Category</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.VotesController.Get(Application.Features.Votes.Queries.GetPagedList.GetVotesQuery)">
            <summary>
            return votes that matche the criteria
            </summary>
            <param name="votesQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.VotesController.Get(System.Guid)">
            <summary>
            Retreives a specific Vote.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.VotesController.Post(Application.Features.Votes.Commands.Create.CreateVoteCommand)">
            <summary>
            Creates a Vote.
            </summary>
            <param name="command"></param>
            <returns>A newly created Vote</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
    </members>
</doc>
